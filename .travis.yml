dist: xenial
language: go
go:
  - "1.11"
cache:
  directories:
    - "$HOME/google-cloud-sdk/"
    - "$GOPATH/pkg/mod"
before_install:
  - if [ ! -f "$HOME/google-cloud-sdk/bin/gcloud" ]; then curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-$GCLOUD_VERSION-linux-x86_64.tar.gz
    && tar -x -C $HOME -f google-cloud-sdk-$GCLOUD_VERSION-linux-x86_64.tar.gz; fi
  - source $HOME/google-cloud-sdk/path.bash.inc
  - gcloud --quiet components install app-engine-go
  - gcloud --quiet components install app-engine-python
  - if [ -n "$GCLOUD_VERSION" ]; then gcloud --quiet components update --version $GCLOUD_VERSION; fi
install: true
script:
  - go test -coverprofile=coverage.txt -covermode=count
after_success:
  - bash <(curl -s https://codecov.io/bash)
before_deploy:
  - echo $TRAVIS_CI_SERVICE_ACCOUNT | base64 -d > travis-ci-service-account.json
  - echo $STAGING_APP_YAML | base64 -d > web/staging.app.yaml
  - echo $PROD_APP_YAML_V4 | base64 -d > web/prod.app.yaml
deploy:
  - provider: script
    script: ./deploy.sh staging
    skip_cleanup: true
    on:
      all_branches: true
      condition: -n "$TRAVIS_CI_SERVICE_ACCOUNT" && -n "$STAGING_APP_YAML"
  - provider: script
    script: ./deploy.sh prod
    skip_cleanup: true
    on:
      condition: -n "$TRAVIS_CI_SERVICE_ACCOUNT" && -n "$PROD_APP_YAML_V4"
      tags: true
env:
  global:
    - GCLOUD_VERSION=230.0.0
    - GO111MODULE=on
