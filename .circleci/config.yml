version: 2
jobs:
  test:
    docker:
      - image: jiayuyi/circleci-go-gcloud:go1.11-gcloud231.0.0
    working_directory: /go/src/github.com/yi-jiayu/bus-eta-bot
    environment:
      ARTIFACTS: /tmp/artifacts
      TEST_RESULTS: /tmp/test-results
      GO111MODULE: "on"
    steps:
      - checkout
      - run:
          name: Set up artifact and test result directories
          command: |
            mkdir -p $ARTIFACTS
            mkdir -p $TEST_RESULTS/go-test
      - restore_cache:
          name: Restore Go module cache
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run:
          name: Run unit tests
          command: |
            store_test_output()
            {
              go-junit-report < go-test.out > results.xml
              cp go-test.out coverage.txt results.xml ${ARTIFACTS}/
              cp results.xml ${TEST_RESULTS}/go-test/
            }
            trap store_test_output EXIT
            go test -v -coverprofile=coverage.txt -covermode=count ./... 2>&1 | tee go-test.out
      - save_cache:
          name: Save Go module cache
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - store_artifacts:
          path: /tmp/artifacts
          destination: artifacts
      - store_test_results:
          path: /tmp/test-results
          destination: test-results
      - run:
          name: Upload coverage
          command: bash <(curl -s https://codecov.io/bash)
  deploy-staging:
    docker:
      - image: google/cloud-sdk
    steps:
      - run:
          name: Authorize the Google Cloud SDK
          command: |
            echo $CIRCLECI_SERVICE_ACCOUNT_KEY | gcloud auth activate-service-account --key-file=-
            gcloud --quiet config set project bus-eta-bot
      - checkout
      - run:
          name: Deploy to staging
          command: |
            # embed current version into source
            tag=$(git describe --tags)
            date=$(date +%Y-%m-%d)
            sed "s/VERSION/$tag/" < version.go > version.go~ && mv version.go~ version.go
            sed "s/VERSION/$tag/; s/DATE/$date/" < index.html > index.html~ && mv index.html~ index.html

            # version cannot contain dots
            tag_escaped=$(sed "s/\./-/g" <<< ${tag})

            gcloud --quiet app deploy --verbosity=info web/staging.app.yaml --version ${tag_escaped}
workflows:
  version: 2
  test_and_deploy:
    jobs:
      - test
      - deploy-staging:
          requires:
            - test
